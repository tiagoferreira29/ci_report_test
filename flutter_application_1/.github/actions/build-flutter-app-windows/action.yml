name: Build Flutter App (Windows)
description: Builds a flutter app for Windows
inputs:
  flutter-cache-path:
    description: "Path to the flutter cache folder"
    required: true

  project-folder:
    description: "The folder where the app to build is located"
    required: true

  obfuscate:
    description: Toggle code obfuscation for builds. Will provide the debug symbols as artifact.
    required: true

  dart-debug-symbols-dir-name:
    description: "The name of the folder where the debug symbols are located"
    required: false

  build-flavor:
    description: "Used to determine the app icon. Value must be supported by the runner/CMakeLists.txt file."
    required: true

  generate-version-file:
    description: "flag whether to generate the file with additional version infos."
    required: true

  version:
    description: "Version number (major.minor.patch)"
    required: true

  build-number:
    description: "Build tag number"
    required: true

  information-version:
    description: "Informational version (major.minor.patch-preReleaseLabel+buildNumber.shortSha)"
    required: false
    default: ""

  pre-release-label:
    description: "Pre-release label"
    required: false
    default: ""

  sha:
    description: "Version source SHA"
    required: false
    default: "n/a"

  sha-short:
    description: "Version source short SHA"
    required: false
    default: "n/a"

  target-file:
    description: 'Path of the target file to generate holding the version information (project-folder\target-file)'
    required: false
    default: ""

  part-of-file:
    description: "The filename use to generate the DART part of statement"
    required: false
    default: ""

runs:
  using: composite

  steps:
    - name: "App: Fetch Flutter dependencies"
      working-directory: ${{ inputs.project-folder }}
      run: flutter pub get
      shell: pwsh

    - name: "App: Build runner"
      working-directory: ${{ inputs.project-folder }}
      run: dart run build_runner build --delete-conflicting-outputs
      shell: pwsh

    - name: "App: Apply Version"
      if: inputs.generate-version-file == 'true'
      uses: ./.github/actions/apply-version
      with:
        target-file: ${{ inputs.project-folder }}/${{ inputs.target-file }}
        part-of-file: ${{ inputs.part-of-file }}
        information-version: ${{ inputs.information-version }}
        pre-release-label: ${{ inputs.pre-release-label }}
        sha: ${{ inputs.sha }}
        sha-short: ${{ inputs.sha-short }}

    - name: "App: Build obfuscated Windows artifacts"
      if: inputs.obfuscate == 'true'
      working-directory: ${{ inputs.project-folder }}
      env:
        FLUTTER_ROOT: ${{ inputs.flutter-cache-path }}
      run: |
        $env:BUILD_FLAVOR = "${{ inputs.build-flavor }}"
        flutter build windows
        --build-name ${{ inputs.version }} `
        --build-number ${{ inputs.build-number }} `
        --obfuscate `
        --split-debug-info=./${{ inputs.dart-debug-symbols-dir-name }} `
        --extra-gen-snapshot-options=--save-obfuscation-map=./${{ inputs.dart-debug-symbols-dir-name }}/obfuscation-map.json
      shell: pwsh

    - name: "App: Build Windows artifacts"
      if: inputs.obfuscate == 'false'
      working-directory: ${{ inputs.project-folder }}
      env:
        FLUTTER_ROOT: ${{ inputs.flutter-cache-path }}
      run: |
        $env:BUILD_FLAVOR = "${{ inputs.build-flavor }}"
        flutter build windows `
        --build-name ${{ inputs.version }} `
        --build-number ${{ inputs.build-number }} `
      shell: pwsh
