name: Create Windows Installer
description: Create the Windows Installer with MSIX
inputs:
  build-flavor:
    description: "The build flavor (BelimoAssistant, BelimoAssistantUat, BelimoAssistantPreview, BelimoAssistantUatPreview, BelimoAssistantDev, BelimoAssistantUatDev)"
    required: true
  app-installer:
    description: "Path to the app installer file"
    required: true
  installer-data-dir:
    description: "absolute path to installer_data directory"
    required: true
  installer-dir:
    description: "absolute path to installer directory"
    required: true
  version:
    description: "semantic version of the app"
    required: true
  revision:
    description: "revision of installer, is displayed additional to version"
    required: true
outputs:
  path:
    description: "The path to the composite installer file"
    value: ${{ steps.package.outputs.path }}

runs:
  using: composite

  steps:
    - name: Prepare directory
      run: |
        New-Item -Path "${{ inputs.installer-dir }}\bundle\build\app" -ItemType Directory
        New-Item -Path "${{ inputs.installer-dir }}\bundle\build\drivers\bus" -ItemType Directory
        New-Item -Path "${{ inputs.installer-dir }}\bundle\build\drivers\port" -ItemType Directory
      shell: pwsh

    - name: Copy drivers
      run: |
        Copy-Item -Path "${{ inputs.installer-data-dir }}/Drivers/ZTH_Serial_Driver/*" -Destination "${{ inputs.installer-dir }}/bundle/build/drivers/bus" -Recurse -Exclude @("*.exe", "ftdiport.inf", "ftdiport.cat")
        Copy-Item -Path "${{ inputs.installer-data-dir }}/Drivers/ZTH_Serial_Driver/*" -Destination "${{ inputs.installer-dir }}/bundle/build/drivers/port" -Recurse -Exclude @("*.exe", "ftdibus.inf", "ftdibus.cat")
      shell: pwsh

    - name: Copy app installer
      run: Copy-Item -Path "${{ inputs.app-installer }}" -Destination "${{ inputs.installer-dir }}/bundle/build/app"
      shell: pwsh

    - name: Restore nuget packages
      run: |
        msbuild -t:restore
      working-directory: ${{ inputs.installer-dir }}\bundle\src\Belimo.Assistant.Installer.Bundle
      shell: pwsh

    - name: Create composite installer msi
      id: package
      run: |
        . "${{ inputs.installer-dir }}\shared\configurations.ps1"
        $outputFile = "${{ inputs.installer-dir }}\bundle\src\Belimo.Assistant.Installer.Bundle\bin\x64\Release\en-US\Belimo_Assistant.msi"
        $config = GetInstallerConfiguration -BuildFlavor ${{ inputs.build-flavor }}
        $version = "${{ inputs.version }}.${{ inputs.revision }}"
        $packageName = $config.GetMsiPackageName("2.0")

        cd ${{ inputs.installer-dir }}\bundle\src\Belimo.Assistant.Installer.Bundle
        msbuild -p:Configuration=Release -p:Platform=x64 -p:Version=$version -p:UpgradeCode=$($config.MsiUpgradeCode) -p:PackageName=`"$packageName`" -p:MsixPackageName=$($config.MsixPackageName)

        Write-Output "path=$outputFile" >> "$env:GITHUB_OUTPUT"
      shell: pwsh
